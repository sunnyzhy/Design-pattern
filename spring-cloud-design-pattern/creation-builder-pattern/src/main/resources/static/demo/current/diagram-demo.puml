@startuml

Computer *-- BuilderImpl
Computer *-- Builder
BuilderImpl <-- Computer

class Computer {
  -final String CPU
  -final String memory
  -final String motherboard
  -final String hardDisk

  -Computer(BuilderImpl builder)
  +static Builder newBuilder()
  static Computer create(BuilderImpl builder)
}

interface Builder {
  +Builder cpu(String cpu)
  +Builder memory(String memory)
  +Builder motherBoard(String motherboard)
  +Builder hardDisk(String hardDisk)
  +Computer build()
}

class BuilderImpl implements Builder {
  String cpu
  String memory
  String motherboard
  String hardDisk

  +Builder cpu(String cpu)
  +Builder memory(String memory)
  +Builder motherBoard(String motherboard)
  +Builder hardDisk(String hardDisk)
  +Computer build()
}

note as N1
    private Computer(BuilderImpl builder) {
        this.cpu = builder.cpu;
        this.memory = builder.memory;
        this.motherboard = builder.motherboard;
        this.hardDisk = builder.hardDisk;
    }
end note

note as N2
    public static Builder newBuilder() {
        return new BuilderImpl();
    }
end note

note as N3
    static Computer create(BuilderImpl builder) {
        return new Computer(builder);
    }
end note

note as M
    @Override
    public Computer build() {
        return Computer.create(this);
    }
end note

Computer .. N1
Computer .. N2
Computer .. N3
BuilderImpl .. M

@enduml