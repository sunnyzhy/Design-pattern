@startuml

Client1 *-- Facade
Client2 *-- Facade
Client3 *-- Facade

Facade *-- SubSystemA
Facade *-- SubSystemB
Facade *-- SubSystemC

class Client1 {
  -Facade facade;

  +Client1()
  +void method()
}

class Client2 {
  -Facade facade;

  +Client2()
  +void method()
}

class Client3 {
  -Facade facade;

  +Client3()
  +void method()
}

class Facade {
  -SubSystemA subSystemA
  -SubSystemB subSystemB
  -SubSystemC subSystemC

  +Facade()
  +void method()
}

class SubSystemA {
  +void methodA()
}

class SubSystemB {
  +void methodB()
}

class SubSystemC {
  +void methodC()
}

note as N
    public Client()
    {
        this.facade = new Facade();
    }
end note

Client1 .. N
Client2 .. N
Client3 .. N

note as M
    public Facade()
    {
        this.subSystemA = new SubSystemA();
        this.subSystemB = new SubSystemB();
        this.subSystemC = new SubSystemC();
    }
end note

Facade .. M

@enduml