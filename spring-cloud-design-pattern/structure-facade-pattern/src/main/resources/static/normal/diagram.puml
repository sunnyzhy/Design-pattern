@startuml

Client1 <-- SubSystemA
Client1 <-- SubSystemB
Client1 <-- SubSystemC

Client2 *-- SubSystemA
Client2 *-- SubSystemB
Client2 *-- SubSystemC

Client3 *-- SubSystemA
Client3 *-- SubSystemB
Client3 *-- SubSystemC

class Client1 {
  -SubSystemA subSystem1
  -SubSystemB subSystem2
  -SubSystemC subSystem3

  +Client1()
  +void method()
}

class Client2 {
  -SubSystemA subSystem1
  -SubSystemB subSystem2
  -SubSystemC subSystem3

  +Client2()
  +void method()
}

class Client3 {
  -SubSystemA subSystem1
  -SubSystemB subSystem2
  -SubSystemC subSystem3

  +Client3()
  +void method()
}

class SubSystemA {
  +void method1()
}

class SubSystemB {
  +void method2()
}

class SubSystemC {
  +void method3()
}

note as M
    public Client()
    {
        this.subSystemA = new SubSystemA();
        this.subSystemB = new SubSystemB();
        this.subSystemC = new SubSystemC();
    }
end note

Client1 .. M
Client2 .. M
Client3 .. M

@enduml